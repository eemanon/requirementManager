{"version":3,"sources":["RequirementCard.js","component/AppBarManager.js","FloatingHelpButton.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","bullet","display","margin","transform","title","fontSize","pos","marginBottom","button","backgroundColor","RequirementCard","gotosource","console","log","props","link","window","open","returnIds","returnID","cardid","columnid","withRelation","CardHeader","avatar","this","relationsymbol","category","subheader","subcategory","withoutRelation","Card","style","minWidth","color","border","stack","onClick","CardContent","Typography","variant","component","content","CardActions","Button","size","React","Component","styles","marginLeft","AppBarManager","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","showOpenFileRelationsDlg","inputOpenFileRef","current","click","setState","state","csvfile","categoriesArraydate","relationsArrayData","datatype","handleChange","event","Papa","parse","target","files","complete","updateData","header","showOpenFileCategoriesDlg","createRef","dataResult","bind","result","data","requirements","relations","classes","AppBar","position","Toolbar","IconButton","edge","className","aria-label","type","ref","name","onChange","startIcon","fab","extendedIcon","FloatingHelpButton","useState","setOpen","Fab","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","Box","Table","table","TableHead","TableRow","TableCell","align","TableBody","scope","List","maxWidth","float","App","secondreqs","getChildID","setObjects","setRelations","showstate","dataFromChild","length","slice","objectID","objectList","relation","RequirementID1","object","filter","el","ID","RequirementID2","linkNature","LinkNature","push","test","spl","concat","dataFromAppBar","nature","map","requirement","index","ListItem","Category","SubCategory","RealRequirement","categoryColor","Link","Content","column","columnIndex","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sWASMA,EAAY,CAChBC,OAAQ,CACNC,QAAS,eACTC,OAAQ,QACRC,UAAW,cAEbC,MAAO,CACLC,SAAU,IAEZC,IAAK,CACHC,aAAc,IAEhBC,OAAQ,CACNC,gBAAiB,SAiCNC,E,2MA5BXC,WAAa,WACTC,QAAQC,IAAI,EAAKC,MAAMC,MACvBC,OAAOC,KAAK,EAAKH,MAAMC,KAAM,W,EAEjCG,UAAY,WACV,EAAKJ,MAAMK,SAAS,CAAC,EAAKL,MAAMM,OAAQ,EAAKN,MAAMO,Y,wEAGjD,IAAMC,EAAe,kBAACC,EAAA,EAAD,CAAYC,OAAQC,KAAKX,MAAMY,eAAgBtB,MAAOqB,KAAKX,MAAMa,SACtFC,UAAWH,KAAKX,MAAMe,cAChBC,EAAkB,kBAACP,EAAA,EAAD,CAAYnB,MAAOqB,KAAKX,MAAMa,SACtDC,UAAWH,KAAKX,MAAMe,cAEtB,OACI,kBAACE,EAAA,EAAD,CAAMC,MAAO,CAACC,SAAU,IAAKxB,gBAAiBgB,KAAKX,MAAMoB,MAAOC,OAAQV,KAAKX,MAAMsB,MAAMX,KAAKX,MAAMO,YAAYI,KAAKX,MAAMM,OAAO,QAAQ,QAAUiB,QAASZ,KAAKP,WACnI,OAA5BO,KAAKX,MAAMY,eAAsBI,EAAgBR,EAClD,kBAACgB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,KACjChB,KAAKX,MAAM4B,UAGlB,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAQZ,MAAOjC,EAAUS,OAAQqC,KAAK,QAAQR,QAASZ,KAAKd,YAA5D,gB,GAvBcmC,IAAMC,W,yGCf9BC,EAAS,CACbxC,OAAO,CACLyC,WAAY,MAmHDC,E,YA9GX,WAAYpC,GAAO,IAAD,8BACd,4CAAMA,KAYVf,UAAY,WAAQoD,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaJ,EAAMK,QAAQ,IAE7BrD,MAAO,CACLkD,SAAU,QArBE,EA0BlBI,yBAA2B,WACvB,EAAKC,iBAAiBC,QAAQC,QAC9B,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLC,QAAS,EAAKD,MAAMC,QACpBC,oBAAqB,EAAKF,MAAME,oBAChCC,mBAAmB,EAAKH,MAAMG,mBAC9BC,SAAU,iBAjCA,EAsClBC,aAAe,SAAAC,GAEbC,IAAKC,MAAMF,EAAMG,OAAOC,MAAM,GAAI,CAChCC,SAAU,EAAKC,WACfC,QAAQ,KA1CM,EA8ClBC,0BAA4B,WAC1B,EAAKlB,iBAAiBC,QAAQC,QAC9B,EAAKC,UAAS,SAAAC,GACZ,MAAO,CACLC,QAAS,EAAKD,MAAMC,QACpBC,oBAAqB,EAAKF,MAAME,oBAChCC,mBAAmB,EAAKH,MAAMG,mBAC9BC,SAAU,kBAnDZ,EAAKJ,MAAQ,CACTC,QAAS,KACTC,oBAAqB,KACrBC,mBAAmB,KACnBC,SAAU,MAEd,EAAKR,iBAAmBb,IAAMgC,YAC9B,EAAKC,WAAa,KAClB,EAAKJ,WAAa,EAAKA,WAAWK,KAAhB,gBAVJ,E,wEAyDPC,GACR,IAAIC,EAAOD,EAAOC,KACjBtE,QAAQC,IAAIqE,GACW,eAAtBzD,KAAKsC,MAAMI,SACZ1C,KAAKX,MAAMqE,aAAaD,GAExBzD,KAAKX,MAAMsE,UAAUF,K,+BAKrB,IAAMG,EAAU5D,KAAK1B,UACrB,OACI,kBAACuF,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQC,UAAWN,EAAQ9B,WAAYrB,MAAM,UAAU0D,aAAW,QACnF,kBAAC,IAAD,OAEA,kBAACrD,EAAA,EAAD,CAAYC,QAAQ,KAAKmD,UAAWN,EAAQjF,OAA5C,sBAEA,2BACIuF,UAAU,YACVE,KAAK,OACLC,IAAKrE,KAAKkC,iBACVoC,KAAK,OACL/D,MAAO,CAAC/B,QAAS,QACjB+F,SAAUvE,KAAK2C,aAAaY,KAAKvD,SAGrC,kBAACmB,EAAA,EAAD,CACIJ,QAAQ,YACRN,MAAM,UACNF,MAAOgB,EAAOxC,OACdyF,UAAW,kBAAC,IAAD,MACX5D,QAAWZ,KAAKoD,0BAA0BG,KAAKvD,OALnD,qBASE,kBAACmB,EAAA,EAAD,CACEJ,QAAQ,YACRN,MAAM,UACNF,MAAOgB,EAAOxC,OACdyF,UAAW,kBAAC,IAAD,MACX5D,QAAWZ,KAAKiC,yBAAyBsB,KAAKvD,OALhD,0B,GAhGMqB,IAAMC,W,2GCF5BhD,EAAYoD,aAAW,SAAAC,GAAK,MAAK,CACrC8C,IAAK,CACHhG,OAAQkD,EAAMK,QAAQ,IAExB0C,aAAc,CACZ3C,YAAaJ,EAAMK,QAAQ,QAMhB,SAAS2C,IACtB,IAAMf,EAAUtF,IAD2B,EAEnB+C,IAAMuD,UAAS,GAFI,mBAEpCpF,EAFoC,KAE9BqF,EAF8B,KAW3C,OACE,6BACE,kBAACC,EAAA,EAAD,CAAKX,aAAW,OAAOD,UAAWN,EAAQa,IAAK7D,QAT3B,WACtBiE,GAAQ,KAQN,KAGA,kBAACE,EAAA,EAAD,CACEvF,KAAMA,EACNwF,QAVc,WAClBH,GAAQ,IAUJI,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAaC,GAAG,sBAAsB,uBACtC,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBF,GAAG,4BACnB,kBAACtE,EAAA,EAAD,CAAYC,QAAQ,QAAQC,UAAU,OACnC,kBAACuE,EAAA,EAAD,CAAK3G,SAAS,eAAd,SACA,kBAAC2G,EAAA,EAAD,CAAK3G,SAAS,iBAAd,gYAIsE,6BAJtE,gHAOA,kBAAC2G,EAAA,EAAD,CAAK3G,SAAS,eAAd,WACA,kBAAC2G,EAAA,EAAD,CAAK3G,SAAS,iBACd,kBAAC4G,EAAA,EAAD,CAAOtB,UAAWN,EAAQ6B,MAAOtB,aAAW,gBACxC,kBAACuB,EAAA,EAAD,KACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,iBACA,kBAACA,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAGJ,kBAACC,EAAA,EAAD,KACI,kBAACH,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,YACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAEJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,WACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAEJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,WACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,WAEJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,eACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAEJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,WACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,OAEJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,WACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAEJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,eACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,YAEJ,kBAACF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAW5E,UAAU,KAAK+E,MAAM,OAAhC,iBACA,kBAACH,EAAA,EAAD,CAAWC,MAAM,SAAjB,oBC3F5B,IAAMvH,EAAY,CAChB0H,KAAK,CACHC,SAAU,IACVC,MAAO,SAkKIC,E,YA7Jb,WAAY9G,GAAQ,IAAD,8BACjB,4CAAMA,KACDiD,MAAQ,CAACoB,aAAc,GAAIC,UAAW,GAAIhD,MAAO,GAAIyF,WAAY,IACtE,EAAKC,WAAa,EAAKA,WAAW9C,KAAhB,gBAClB,EAAK+C,WAAa,EAAKA,WAAW/C,KAAhB,gBAClB,EAAKgD,aAAe,EAAKA,aAAahD,KAAlB,gBACpB,EAAKiD,UAAY,EAAKA,UAAUjD,KAAf,gBANA,E,wEAQRkD,GAAgB,IAAD,OACxBtH,QAAQC,IAAI,0BAETqH,EAAc,GAAGzG,KAAKsC,MAAM3B,MAAM+F,QAGjC1G,KAAKqC,UAAS,SAAAC,GACZ,IAAM3B,EAAQ2B,EAAM3B,MAAMgG,MAAM,EAAEF,EAAc,IAE1CL,EAAa9D,EAAM8D,WAAWO,MAAM,EAAEF,EAAc,IAC1D,MAAO,CACL/C,aAAcpB,EAAMoB,aACpBC,UAAWrB,EAAMqB,UACjBhD,QACAyF,iBAKR,IAAMQ,EAAWH,EAAc,GAC3BI,EAAa,GApBO,uBAqBxB,IArBwB,IAqBxB,EArBwB,iBAqBbC,EArBa,QAsBtB,GAAIA,EAASC,gBAAkBH,EAAS,CAEtC,IAAII,EAAS,EAAK1E,MAAMoB,aAAauD,QAAO,SAAUC,GACpD,OAAQA,EAAGC,IAAIL,EAASM,kBAE1BJ,EAAO,GAAGK,WAAaP,EAASQ,WAEhCT,EAAWU,KAAKP,EAAO,IACvB7H,QAAQC,IAAIyH,KAThB,EAAuB7G,KAAKsC,MAAMqB,UAAlC,+CAA8C,IArBtB,kFAiCxB,IAAI6D,EAAO,CAAC,CAAC,EAAE,IACfA,EAAKD,KAAKV,GACV1H,QAAQC,IAAI,aACZD,QAAQC,IAAIoI,GACZ,IAAMC,EAAMD,EAAKb,MAAM,EAAEa,EAAKd,QAC9BvH,QAAQC,IAAIqI,GAEZzH,KAAKqC,UAAS,SAAAC,GACZ,IAAM3B,EAAQ2B,EAAM3B,MAAM+G,OAAOjB,EAAc,IACzCL,EAAa9D,EAAM8D,WAAWsB,OAAOD,GAC3C,MAAO,CACL/D,aAAcpB,EAAMoB,aACpBC,UAAWrB,EAAMqB,UACjBhD,QACAyF,mB,iCAKKuB,GACU,MAAhBA,GAED3H,KAAKqC,UAAS,SAAAC,GACZ,MAAO,CACLoB,aAAciE,EACdhE,UAAWrB,EAAMqB,UACjBhD,MAAO2B,EAAM3B,MACbyF,WAAY9D,EAAM8D,iB,mCAKbuB,GACQ,MAAhBA,GAED3H,KAAKqC,UAAS,SAAAC,GACZ,MAAO,CACLoB,aAAcpB,EAAMoB,aACpBC,UAAWgE,EACXhH,MAAO2B,EAAM3B,MACbyF,WAAY9D,EAAM8D,iB,oCAMZlG,GACZ,MAAc,aAAXA,EACM,UACK,cAAXA,EACM,UACK,eAAXA,EACM,UACK,SAAXA,EACM,UACK,UAAXA,EACM,MACK,oBAAXA,EACM,SACK,SAAXA,EACM,QACK,SAAXA,EACM,eADT,I,iCAIS0H,GAET,OADAzI,QAAQC,IAAIwI,GACC,MAAVA,EAkBM,GAjBK,aAATA,EACM,SACG,YAATA,EACM,SACG,YAATA,EACM,SACG,gBAATA,EACM,SACG,gBAATA,EACM,SACG,YAATA,EACM,IACG,YAATA,EACM,SACG,kBAATA,EACM,cADT,I,kCAMFzI,QAAQC,IAAIY,KAAKsC,S,+BAET,IAAD,OACP,OACE,yBAAK4B,UAAU,OACf,kBAAC,EAAD,CAAeR,aAAc1D,KAAKsG,WAAY3C,UAAW3D,KAAKuG,eAC9D,kBAACP,EAAA,EAAD,CAAMzF,MAAOjC,EAAU0H,KAAMhF,UAAU,MAAMmD,aAAW,wBACnDnE,KAAKsC,MAAMoB,aAAamE,KAAI,SAACC,EAAaC,GAAd,OAC3B,kBAACC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAiB/H,eAAgB,EAAKoH,WAAWS,EAAYT,YAAa1G,MAAO,EAAK2B,MAAM3B,MAAOjB,SAAU,EAAK2G,WAAY1G,OAAQmI,EAAYX,GAAIvH,SAAS,IAAIM,SAAU4H,EAAYG,SAAU7H,YAAa0H,EAAYI,YAAazH,MAAqC,QAA9BqH,EAAYK,gBAAwB,EAAKC,cAAcN,EAAYG,UAAU,QAAS3I,KAAMwI,EAAYO,KAAMpH,QAAS6G,EAAYQ,eAI1XtI,KAAKsC,MAAM8D,WAAWyB,KAAI,SAACU,EAAQR,GAAT,OACzB,kBAAC/B,EAAA,EAAD,CAAMzF,MAAOjC,EAAU0H,KAAMhF,UAAU,MAAMmD,aAAW,wBACrDoE,EAAOV,KAAI,SAACC,EAAaU,GAAd,OACV,kBAACR,EAAA,EAAD,KACE,kBAAC,EAAD,CAAiB/H,eAAgB,EAAKoH,WAAWS,EAAYT,YAAa1G,MAAO,EAAK2B,MAAM3B,MAAOjB,SAAU,EAAK2G,WAAY1G,OAAQmI,EAAYX,GAAIvH,SAAU4I,EAAY,EAAGtI,SAAU4H,EAAYG,SAAU7H,YAAa0H,EAAYI,YAAazH,MAAqC,QAA9BqH,EAAYK,gBAAwB,EAAKC,cAAcN,EAAYG,UAAU,QAAS3I,KAAMwI,EAAYO,KAAMpH,QAAS6G,EAAYQ,kBAMzY,kBAAC3D,EAAD,W,GAzJctD,IAAMC,WCJJmH,QACW,cAA7BlJ,OAAOmJ,SAASC,UAEe,UAA7BpJ,OAAOmJ,SAASC,UAEhBpJ,OAAOmJ,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.3f7364ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\n\r\n\r\nconst useStyles = {\r\n  bullet: {\r\n    display: 'inline-block',\r\n    margin: '0 2px',\r\n    transform: 'scale(0.8)',\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  pos: {\r\n    marginBottom: 12,\r\n  },\r\n  button: {\r\n    backgroundColor: 'gray'\r\n  }\r\n};\r\n\r\nclass RequirementCard extends React.Component  {\r\n    gotosource = () => {\r\n        console.log(this.props.link);\r\n        window.open(this.props.link, \"_blank\")\r\n      }\r\n    returnIds = () => {\r\n      this.props.returnID([this.props.cardid, this.props.columnid]);\r\n    }\r\n    render(){\r\n        const withRelation = <CardHeader avatar={this.props.relationsymbol} title={this.props.category}\r\n        subheader={this.props.subcategory}/>;\r\n        const withoutRelation = <CardHeader title={this.props.category}\r\n        subheader={this.props.subcategory}/>;\r\n      \r\n        return (\r\n            <Card style={{minWidth: 275, backgroundColor: this.props.color, border: this.props.stack[this.props.columnid]===this.props.cardid?'solid':'none'}}  onClick={this.returnIds}>\r\n              {this.props.relationsymbol===null?withoutRelation:withRelation}\r\n              <CardContent>\r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    {this.props.content}\r\n                </Typography>\r\n              </CardContent>\r\n              <CardActions>\r\n                <Button style={useStyles.button} size=\"small\" onClick={this.gotosource}>Source</Button>\r\n              </CardActions>\r\n            </Card>\r\n          );\r\n    }\r\n}\r\nexport default RequirementCard;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport AppBar from '@material-ui/core/AppBar'\r\nimport Button from '@material-ui/core/Button';\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Papa from 'papaparse';\r\n\r\nconst styles = {\r\n  button:{\r\n    marginLeft: 100,\r\n  }\r\n}\r\n\r\nclass AppBarManager extends React.Component {\r\n    constructor(props){\r\n        super(props) ; \r\n        this.state = {\r\n            csvfile: null,\r\n            categoriesArraydate: null,\r\n            relationsArrayData:null,\r\n            datatype: null\r\n        };\r\n        this.inputOpenFileRef = React.createRef();\r\n        this.dataResult = null;\r\n        this.updateData = this.updateData.bind(this);\r\n    }\r\n    \r\n    useStyles = () => { makeStyles(theme => ({\r\n        root: {\r\n          flexGrow: 1,\r\n        },\r\n        menuButton: {\r\n          marginRight: theme.spacing(2),\r\n        },\r\n        title: {\r\n          flexGrow: 1,\r\n        },\r\n      }))\r\n    };\r\n\r\n    showOpenFileRelationsDlg = () => {\r\n        this.inputOpenFileRef.current.click();\r\n        this.setState(state => {\r\n          return {\r\n            csvfile: this.state.csvfile,\r\n            categoriesArraydate: this.state.categoriesArraydate,\r\n            relationsArrayData:this.state.relationsArrayData,\r\n            datatype: \"relations\"\r\n          };\r\n        });\r\n    };\r\n\r\n    handleChange = event => {    \r\n                  \r\n      Papa.parse(event.target.files[0], {\r\n        complete: this.updateData,\r\n        header: true\r\n      });\r\n\r\n    };\r\n    showOpenFileCategoriesDlg = () => {\r\n      this.inputOpenFileRef.current.click();\r\n      this.setState(state => {\r\n        return {\r\n          csvfile: this.state.csvfile,\r\n          categoriesArraydate: this.state.categoriesArraydate,\r\n          relationsArrayData:this.state.relationsArrayData,\r\n          datatype: \"categories\"\r\n        };\r\n      });\r\n  };\r\n    updateData(result) {      \r\n       var data = result.data ;        \r\n        console.log(data);\r\n      if(this.state.datatype===\"categories\")\r\n        this.props.requirements(data);      \r\n      else\r\n        this.props.relations(data);  \r\n    }\r\n\r\n    render(){\r\n        \r\n        const classes = this.useStyles;\r\n        return(\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n                    <MenuIcon />\r\n                    </IconButton>\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                    Relation Visualizer\r\n                    <input\r\n                        className=\"csv-input\"\r\n                        type=\"file\"\r\n                        ref={this.inputOpenFileRef}\r\n                        name=\"file\"\r\n                        style={{display: 'none'}}\r\n                        onChange={this.handleChange.bind(this)}\r\n                    />\r\n                    </Typography>                                     \r\n                    <Button \r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        style={styles.button}\r\n                        startIcon={<CloudUploadIcon />}\r\n                        onClick = {this.showOpenFileCategoriesDlg.bind(this)}\r\n                      >\r\n                        Upload Categories\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"contained\"\r\n                        color=\"default\"\r\n                        style={styles.button}\r\n                        startIcon={<CloudUploadIcon />}\r\n                        onClick = {this.showOpenFileRelationsDlg.bind(this)}\r\n                      >\r\n                        Upload Relations\r\n                      </Button>\r\n                </Toolbar>\r\n            </AppBar>\r\n        );\r\n    }           \r\n}\r\n\r\nexport default AppBarManager;\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  fab: {\r\n    margin: theme.spacing(1),\r\n  },\r\n  extendedIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n}));\r\n\r\n\r\n\r\nexport default function FloatingHelpButton() {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  return (\r\n    <div>\r\n      <Fab aria-label=\"like\" className={classes.fab} onClick={handleClickOpen}>\r\n        ?\r\n      </Fab>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">{\"Usage & Symbol Help\"}</DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n             <Typography variant=\"title\" component=\"div\">\r\n                <Box fontSize=\"h5.fontSize\">Usage</Box>\r\n                <Box fontSize=\"body.fontSize\">\r\n                    This application offers exploration of requirements and their relations. By clicking on a requirement,\r\n                    all related requirements are shown. Those requirements have a symbol on the left upper corner to describe \r\n                    the nature of relation that links them to the before clicked requirement. At any time another requirement\r\n                    can be selected to allow exploration of its related requirements. <br />\r\n                    Every requirement also links directly to its source. A click on the button \"Source\" opens a new Browser Tab.\r\n                </Box>\r\n                <Box fontSize=\"h5.fontSize\">Symbols</Box>\r\n                <Box fontSize=\"body.fontSize\">\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                    <TableRow>\r\n                        <TableCell>Relation</TableCell>\r\n                        <TableCell align=\"right\">Symbol</TableCell>\r\n                    </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Disjoins</TableCell>\r\n                            <TableCell align=\"right\"> &#8741;</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Belongs</TableCell>\r\n                            <TableCell align=\"right\"> &#8838;</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Repeats</TableCell>\r\n                            <TableCell align=\"right\">&#8660;</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Contradicts</TableCell>\r\n                            <TableCell align=\"right\"> &#8853;</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Extends</TableCell>\r\n                            <TableCell align=\"right\"> &gt;</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Excepts</TableCell>\r\n                            <TableCell align=\"right\"> &#11005;</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Constraints</TableCell>\r\n                            <TableCell align=\"right\"> &#10148;</TableCell>\r\n                        </TableRow>\r\n                        <TableRow>\r\n                            <TableCell component=\"th\" scope=\"row\">Characterizes</TableCell>\r\n                            <TableCell align=\"right\"> &#11106;</TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>            \r\n                </Box>\r\n             </Typography>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport RequirementCard from './RequirementCard';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport AppBarManager from './component/AppBarManager';\r\nimport FloatingHelpButton from './FloatingHelpButton';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = {\r\n  List:{\r\n    maxWidth: 300,\r\n    float: \"left\",\r\n  },\r\n};\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {requirements: [], relations: [], stack: [], secondreqs: []};\r\n    this.getChildID = this.getChildID.bind(this);\r\n    this.setObjects = this.setObjects.bind(this);\r\n    this.setRelations = this.setRelations.bind(this);\r\n    this.showstate = this.showstate.bind(this);\r\n  }\r\n  getChildID(dataFromChild) {\r\n    console.log(\"click function clicked\");\r\n    //if chosen column is already present, remove items from stack\r\n    if(dataFromChild[1]<this.state.stack.length){\r\n      //remove all items until we are back on this position...\r\n      \r\n        this.setState(state => {\r\n          const stack = state.stack.slice(0,dataFromChild[1]);\r\n          //also, remove eventual arrays for the columns behind it:\r\n          const secondreqs = state.secondreqs.slice(0,dataFromChild[1]);\r\n          return {\r\n            requirements: state.requirements,\r\n            relations: state.relations,\r\n            stack,\r\n            secondreqs\r\n          };\r\n        });\r\n    }     \r\n    //see if we can find a list of related requirements...\r\n    const objectID = dataFromChild[0];\r\n    let objectList = [];\r\n    for (const relation of this.state.relations) {\r\n      if (relation.RequirementID1 == objectID){\r\n        //found the id in a relation so we put the related object into the list and set the property \"linkNature\"\r\n        let object = this.state.requirements.filter(function (el) {\r\n          return (el.ID==relation.RequirementID2);\r\n        });\r\n        object[0].linkNature = relation.LinkNature;\r\n        \r\n        objectList.push(object[0]);\r\n        console.log(objectList);\r\n      }\r\n    }\r\n    var test = [[1,1]];\r\n    test.push(objectList);\r\n    console.log(\"new array\")\r\n    console.log(test)\r\n    const spl = test.slice(1,test.length);\r\n    console.log(spl)\r\n    //add our new column to thestate\r\n    this.setState(state => {\r\n      const stack = state.stack.concat(dataFromChild[0]);\r\n      const secondreqs = state.secondreqs.concat(spl);\r\n      return {\r\n        requirements: state.requirements,\r\n        relations: state.relations,\r\n        stack,\r\n        secondreqs\r\n      };\r\n    });  \r\n  }\r\n\r\n  setObjects(dataFromAppBar){\r\n    if(dataFromAppBar!=null){\r\n      //fill state objects :)\r\n      this.setState(state => {\r\n        return {\r\n          requirements: dataFromAppBar,\r\n          relations: state.relations,\r\n          stack: state.stack,\r\n          secondreqs: state.secondreqs\r\n        };\r\n      });\r\n    }\r\n  }\r\n  setRelations(dataFromAppBar){\r\n    if(dataFromAppBar!=null){\r\n      //fill state relations :)\r\n      this.setState(state => {\r\n        return {\r\n          requirements: state.requirements,\r\n          relations: dataFromAppBar,\r\n          stack: state.stack,\r\n          secondreqs: state.secondreqs\r\n        };\r\n      });\r\n    }\r\n  }\r\n\r\n  categoryColor(category){\r\n    if(category===\"Behavior\")\r\n      return \"#ffff00\";\r\n    if(category===\"Component\")\r\n      return \"#3399ff\";\r\n    if(category===\"Constraint\")\r\n      return \"#0000ff\";\r\n    if(category===\"Goal\")\r\n      return \"#999999\";\r\n    if(category===\"Limit\")\r\n      return \"red\";\r\n    if(category===\"Metarequirement\")\r\n      return \"orange\"\r\n    if(category===\"Role\")\r\n      return \"green\"\r\n    if(category===\"Task\")\r\n      return \"#66ff66\";\r\n  }\r\n\r\n  linkNature(nature){\r\n    console.log(nature)\r\n    if(nature != null){\r\n      if(nature===\"Disjoins\")\r\n        return '\\u2225';\r\n      if(nature===\"Belongs\")\r\n        return '\\u2286';\r\n      if(nature===\"Repeats\")\r\n        return '\\u21D4';\r\n      if(nature===\"Constraints\")\r\n        return '\\u27A4';\r\n      if(nature===\"Contradicts\")\r\n        return '\\u2295';\r\n      if(nature===\"Extends\")\r\n        return '>';\r\n      if(nature===\"Excepts\")\r\n        return '\\u2AFD';\r\n      if(nature===\"Characterizes\")\r\n        return '\\u2B62';\r\n    } else\r\n      return \"\";\r\n  }\r\n  showstate(){\r\n    console.log(this.state)\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n      <AppBarManager requirements={this.setObjects} relations={this.setRelations} />\r\n      <List style={useStyles.List} component=\"nav\" aria-label=\"main mailbox folders\">\r\n          {this.state.requirements.map((requirement, index) => (\r\n            <ListItem>\r\n              <RequirementCard relationsymbol={this.linkNature(requirement.linkNature)} stack={this.state.stack} returnID={this.getChildID} cardid={requirement.ID} columnid=\"0\" category={requirement.Category} subcategory={requirement.SubCategory} color={requirement.RealRequirement===\"Oui\"?this.categoryColor(requirement.Category):\"white\"} link={requirement.Link} content={requirement.Content} />\r\n            </ListItem>\r\n          ))}\r\n      </List>\r\n      {this.state.secondreqs.map((column, index) => (\r\n        <List style={useStyles.List} component=\"nav\" aria-label=\"main mailbox folders\">\r\n          {column.map((requirement, columnIndex) => (\r\n            <ListItem>\r\n              <RequirementCard relationsymbol={this.linkNature(requirement.linkNature)} stack={this.state.stack} returnID={this.getChildID} cardid={requirement.ID} columnid={columnIndex+1} category={requirement.Category} subcategory={requirement.SubCategory} color={requirement.RealRequirement===\"Oui\"?this.categoryColor(requirement.Category):\"white\"} link={requirement.Link} content={requirement.Content} />\r\n            </ListItem>            \r\n          ))}\r\n        </List>\r\n        \r\n      ))}\r\n    <FloatingHelpButton />\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}